fib: func(n: u32) -> u32 {
	if (n <= 1) {
		return!(n);
	}

	return!(fib(n - 1) + fib(n - 2));
}

+- DECL
|	|- ID "fib"
|	+- TYPE "func(u32) -> u32"
+- FUNC_DEFINITION
	|- ID "fib"
	+- SCOPE
		|- IF
		|	|- CASE
		|	|	+- COMPARISON_EXPR
		|	|		|- ID n
		|	|		|- OPERATION <=
		|	|		+- LITERAL 1
		|	+- SCOPE
		|		|- RETURN
		|		|	+- ID N
		|		+- SCOPE_END
		|- RETURN
		|	+- ADDITION_EXPR
		|		|- FUNC_CALL
		|		|	|- ID fib
		|		|	+- ARG
		|		|		+- SUBTRACTION_EXPR
		|		|			|- ID n
		|		|			+- LITERAL 1
		|		+- FUNC_CALL
		|			|- ID fib
		|			+- ARG
		|				+- SUBTRACTION_EXPR
		|					|- ID n
		|					+- LITERAL 2	
		+- SCOPE_END
